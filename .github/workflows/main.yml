name: Cypress Tests

on:
  issue_comment:
    types: [created, edited]

jobs:
  install:
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.0-chrome88-ff89
    steps:
      - name: Comment branch
        uses: xt0rted/pull-request-comment-branch@v1.3.0
        id: comment-branch
        
      - name: Checkout
        uses: actions/checkout@v3
        if: success()
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Cypress install
        uses: cypress-io/github-action@v2
        with:
          runTests: false
      # report machine parameters
      - run: yarn cypress info
      - run: node -p 'os.cpus()'
      - run: yarn build

      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          path: build

  ui-chrome-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.0-chrome88-ff89
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: "UI Tests - Chrome"
        uses: cypress-io/github-action@v2
        with:
          start: yarn start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          spec: cypress/integration/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
